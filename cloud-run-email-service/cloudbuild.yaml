# This Cloud Build configuration deploys a Node.js application to Cloud Run.
# It builds the application, then deploys it while injecting secrets
# from Google Secret Manager as environment variables.

steps:
# Step 1: Install Node.js dependencies
# This uses the 'npm' builder.
- name: 'gcr.io/cloud-builders/npm'
  id: Install Dependencies
  args: ['install']

# Step 2: Build the frontend application (if applicable, otherwise remove if this is a backend-only service)
# Assuming your package.json has a 'build' script.
- name: 'gcr.io/cloud-builders/npm'
  id: Build Frontend
  args: ['run', 'build'] # Adjust 'build' if your script name is different

# Step 3: Build the Docker image
# This uses the 'cloud-sdk' builder and Docker to build your container image.
# The Dockerfile must be in the current directory (which is freight-file-tracker).
- name: 'gcr.io/cloud-builders/docker'
  id: Build Docker Image
  args: ['build', '-t', "gcr.io/$PROJECT_ID/freight-email-service:$_BUILD_ID", '.']

# Step 4: Deploy to Cloud Run
# This step deploys the built Docker image to Cloud Run.
# It uses the secrets from Secret Manager as environment variables for the Cloud Run service.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: Deploy to Cloud Run
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - 'freight-email-service' # Name of your Cloud Run service
  - '--image=gcr.io/$PROJECT_ID/freight-email-service:$_BUILD_ID'
  - '--region=us-central1' # Or your desired region
  - '--allow-unauthenticated' # Adjust based on whether your service needs to be public or internal
  - '--platform=managed'
  - '--set-env-vars=FIREBASE_SERVICE_ACCOUNT_KEY=$$FIREBASE_SERVICE_ACCOUNT_KEY_SECRET'
  - '--set-env-vars=GMAIL_CLIENT_ID=$$GMAIL_CLIENT_ID_SECRET'
  - '--set-env-vars=GMAIL_CLIENT_SECRET=$$GMAIL_CLIENT_SECRET_SECRET'
  - '--set-env-vars=GMAIL_REFRESH_TOKEN=$$GMAIL_REFRESH_TOKEN_SECRET'
  - '--set-env-vars=GMAIL_REDIRECT_URL=$$GMAIL_REDIRECT_URL_SECRET'
  # Permissions for Cloud Run to access Secret Manager at runtime
  - '--update-secrets=FIREBASE_SERVICE_ACCOUNT_KEY_SECRET=firebase-service-account-key:latest'
  - '--update-secrets=GMAIL_CLIENT_ID_SECRET=gmail-client-id:latest'
  - '--update-secrets=GMAIL_CLIENT_SECRET_SECRET=gmail-client-secret:latest'
  - '--update-secrets=GMAIL_REFRESH_TOKEN_SECRET=gmail-refresh-token:latest'
  - '--update-secrets=GMAIL_REDIRECT_URL_SECRET=gmail-redirect-url:latest'

# This section tells Cloud Build to send logs directly to Cloud Logging.
options:
  logging: CLOUD_LOGGING_ONLY

# List of secrets to be accessed by Cloud Build during the build process
# These secret values are made available as environment variables to the build steps
# (prefixed with 'SECRET_') and then explicitly passed to Cloud Run.
availableSecrets:
  secretManager:
  - versionName: projects/596797154216/secrets/firebase-service-account-key/versions/latest
    env: 'FIREBASE_SERVICE_ACCOUNT_KEY_SECRET'
  - versionName: projects/596797154216/secrets/gmail-client-id/versions/latest
    env: 'GMAIL_CLIENT_ID_SECRET'
  - versionName: projects/596797154216/secrets/gmail-client-secret/versions/latest
    env: 'GMAIL_CLIENT_SECRET_SECRET'
  - versionName: projects/596797154216/secrets/gmail-refresh-token/versions/latest
    env: 'GMAIL_REFRESH_TOKEN_SECRET'
  - versionName: projects/596797154216/secrets/gmail-redirect-url/versions/latest
    env: 'GMAIL_REDIRECT_URL_SECRET'
